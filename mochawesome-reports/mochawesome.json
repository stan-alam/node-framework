{
  "reportTitle": "hub-node-test",
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2016-07-08T13:40:22.553Z",
    "end": "2016-07-08T13:40:38.365Z",
    "duration": 15812,
    "testsRegistered": 18,
    "passPercent": 22.2,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 13,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Running Error Integration Tests",
        "suites": [],
        "tests": [
          {
            "title": "Invoke errors api with valid errors payload",
            "fullTitle": "Running Error Integration Tests Invoke errors api with valid errors payload",
            "timedOut": false,
            "duration": 279,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "errorSchema.applicationId = applicationList.id;<br>errorSchema.description = validateDescription;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">201</span>);<br>done();",
            "isRoot": false,
            "uuid": "3105426b-04ac-4fce-9e8d-73419c9967c4",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          },
          {
            "title": "Invoke errors api with invalid errors payload",
            "fullTitle": "Running Error Integration Tests Invoke errors api with invalid errors payload",
            "timedOut": false,
            "duration": 252,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">delete</span> errorSchema.responseCode;<br>errorSchema.description = <span class=\"hljs-string\">'Random String'</span>;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">400</span>);<br>done();",
            "isRoot": false,
            "uuid": "144bae17-0dc9-4289-8937-7aa8b2276211",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          },
          {
            "title": "Verify UI has Error Message Sent",
            "fullTitle": "Running Error Integration Tests Verify UI has Error Message Sent",
            "timedOut": false,
            "duration": 4686,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">1500000</span>);<br>driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='errorsCount_link']\"</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[1]/div/section/button[2]'</span>)), <span class=\"hljs-number\">1300</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>        driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='input_description']\"</span>)), <span class=\"hljs-number\">2500</span>).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ele</span>)</span>{<br>            sleep.sleep(<span class=\"hljs-number\">3</span>)<br>            ele.sendKeys(validateDescription);<br>            driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'//*[@id=\"filter\"]/div/div[3]/button[1]'</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                sleep.sleep(<span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\">// Need to slp for a second to wait for filter</span><br>                driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[2]/table/tbody/tr[2]/td[5]/span[2]'</span>)), <span class=\"hljs-number\">100</span>).getInnerHtml().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">field</span>)</span>{<br>                    assert.equal(field, validateDescription);<br>                    done();<br>                });<br>            });<br>        });<br>    });<br> });",
            "isRoot": false,
            "uuid": "8edf8bd9-4074-46f6-bf68-44bbc1c76ea9",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/error-reporting-service/test.js",
        "uuid": "ed4d47f1-941e-415b-8479-fd814855e6a0",
        "fullFile": "/home/adamsbd/git/hub-node-test/test/error-reporting-service/test.js",
        "passes": [
          {
            "title": "Invoke errors api with valid errors payload",
            "fullTitle": "Running Error Integration Tests Invoke errors api with valid errors payload",
            "timedOut": false,
            "duration": 279,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "errorSchema.applicationId = applicationList.id;<br>errorSchema.description = validateDescription;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">201</span>);<br>done();",
            "isRoot": false,
            "uuid": "3105426b-04ac-4fce-9e8d-73419c9967c4",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          },
          {
            "title": "Invoke errors api with invalid errors payload",
            "fullTitle": "Running Error Integration Tests Invoke errors api with invalid errors payload",
            "timedOut": false,
            "duration": 252,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">delete</span> errorSchema.responseCode;<br>errorSchema.description = <span class=\"hljs-string\">'Random String'</span>;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">400</span>);<br>done();",
            "isRoot": false,
            "uuid": "144bae17-0dc9-4289-8937-7aa8b2276211",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          },
          {
            "title": "Verify UI has Error Message Sent",
            "fullTitle": "Running Error Integration Tests Verify UI has Error Message Sent",
            "timedOut": false,
            "duration": 4686,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">1500000</span>);<br>driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='errorsCount_link']\"</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[1]/div/section/button[2]'</span>)), <span class=\"hljs-number\">1300</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>        driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='input_description']\"</span>)), <span class=\"hljs-number\">2500</span>).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ele</span>)</span>{<br>            sleep.sleep(<span class=\"hljs-number\">3</span>)<br>            ele.sendKeys(validateDescription);<br>            driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'//*[@id=\"filter\"]/div/div[3]/button[1]'</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                sleep.sleep(<span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\">// Need to slp for a second to wait for filter</span><br>                driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[2]/table/tbody/tr[2]/td[5]/span[2]'</span>)), <span class=\"hljs-number\">100</span>).getInnerHtml().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">field</span>)</span>{<br>                    assert.equal(field, validateDescription);<br>                    done();<br>                });<br>            });<br>        });<br>    });<br> });",
            "isRoot": false,
            "uuid": "8edf8bd9-4074-46f6-bf68-44bbc1c76ea9",
            "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5217
      },
      {
        "title": "POST / Publisher Tests",
        "suites": [
          {
            "title": "POST / happy path",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / happy path response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t.set({<br>\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t})<br>\t.send(hp.hp())<br>\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t<span class=\"hljs-keyword\">if</span> (err) <br>\t\t\t{   <br>\t\t\t\t<span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t}<br>\t\tdone();<br>\t});",
                "isRoot": false,
                "uuid": "07a19dbf-315f-4842-9065-25884cdafa07",
                "parentUUID": "2b54ea90-6f4d-4d1f-932e-d7b9b4a0bc7c",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "2b54ea90-6f4d-4d1f-932e-d7b9b4a0bc7c",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / happy path response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t.set({<br>\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t})<br>\t.send(hp.hp())<br>\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t<span class=\"hljs-keyword\">if</span> (err) <br>\t\t\t{   <br>\t\t\t\t<span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t}<br>\t\tdone();<br>\t});",
                "isRoot": false,
                "uuid": "07a19dbf-315f-4842-9065-25884cdafa07",
                "parentUUID": "2b54ea90-6f4d-4d1f-932e-d7b9b4a0bc7c",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum created",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum created response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(oc.oc())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "fd9dfbbd-4eed-485e-92a8-9309f0adb350",
                "parentUUID": "7bfc5b44-4702-400d-8a02-435c08eb1467",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "7bfc5b44-4702-400d-8a02-435c08eb1467",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum created response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(oc.oc())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "fd9dfbbd-4eed-485e-92a8-9309f0adb350",
                "parentUUID": "7bfc5b44-4702-400d-8a02-435c08eb1467",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum replaced",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum replaced response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(or.or())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "e7c8837f-c310-4229-b386-7b62305207de",
                "parentUUID": "ff6a081f-604a-4a2d-a88d-4781dfd35a8a",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "ff6a081f-604a-4a2d-a88d-4781dfd35a8a",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum replaced response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(or.or())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "e7c8837f-c310-4229-b386-7b62305207de",
                "parentUUID": "ff6a081f-604a-4a2d-a88d-4781dfd35a8a",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum patched",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum patched response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(op.op())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "3a713e42-9e90-4112-a241-98513ed17897",
                "parentUUID": "da45f393-616a-4567-8cfb-ab3339c877c6",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "da45f393-616a-4567-8cfb-ab3339c877c6",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum patched response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(op.op())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "3a713e42-9e90-4112-a241-98513ed17897",
                "parentUUID": "da45f393-616a-4567-8cfb-ab3339c877c6",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum deleted",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum deleted response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(od.od())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c903badf-0f7c-4619-801c-2e71ef92c544",
                "parentUUID": "5fc3453a-c255-406d-87f2-2a9e3cdca286",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "5fc3453a-c255-406d-87f2-2a9e3cdca286",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum deleted response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(od.od())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c903badf-0f7c-4619-801c-2e71ef92c544",
                "parentUUID": "5fc3453a-c255-406d-87f2-2a9e3cdca286",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum limited",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum limited response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ol.ol())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "1bcf4d00-7b60-4491-8a1a-31d0a357f390",
                "parentUUID": "414b7169-ed56-47e5-be4a-3fe6d1ff2936",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "414b7169-ed56-47e5-be4a-3fe6d1ff2936",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / operation: enum limited response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ol.ol())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "1bcf4d00-7b60-4491-8a1a-31d0a357f390",
                "parentUUID": "414b7169-ed56-47e5-be4a-3fe6d1ff2936",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / operation: enum invalid",
            "suites": [],
            "tests": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / operation: enum invalid response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(oi.oi())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "466106fc-2641-44f6-bb75-f96875692f17",
                "parentUUID": "84cd7115-f1c9-4487-a97f-a635df8d2d5d",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "84cd7115-f1c9-4487-a97f-a635df8d2d5d",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / operation: enum invalid response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(oi.oi())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "466106fc-2641-44f6-bb75-f96875692f17",
                "parentUUID": "84cd7115-f1c9-4487-a97f-a635df8d2d5d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / required operation: not present",
            "suites": [],
            "tests": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / required operation: not present response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(onp.onp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c44e353b-7e32-4475-af4b-17cbf86cb2ef",
                "parentUUID": "0b23019a-60a2-4067-85b7-74d06631c909",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "0b23019a-60a2-4067-85b7-74d06631c909",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / required operation: not present response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(onp.onp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c44e353b-7e32-4475-af4b-17cbf86cb2ef",
                "parentUUID": "0b23019a-60a2-4067-85b7-74d06631c909",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / required resource: enum invalid",
            "suites": [],
            "tests": [
              {
                "title": "response with status 403",
                "fullTitle": "POST / Publisher Tests POST / required resource: enum invalid response with status 403",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ri.ri())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">403</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "de7e5c78-0c0d-4c98-ba95-21f8b0102e84",
                "parentUUID": "d4176126-9d0e-4aa5-81ed-d666c0eb3583",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "d4176126-9d0e-4aa5-81ed-d666c0eb3583",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 403",
                "fullTitle": "POST / Publisher Tests POST / required resource: enum invalid response with status 403",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ri.ri())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">403</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "de7e5c78-0c0d-4c98-ba95-21f8b0102e84",
                "parentUUID": "d4176126-9d0e-4aa5-81ed-d666c0eb3583",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / required resource: not present",
            "suites": [],
            "tests": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / required resource: not present response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token,  <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(rnp.rnp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "eee932d5-a28d-48e6-99b0-4cc8680a7a5c",
                "parentUUID": "25315258-a084-4a97-be13-529161cd4148",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "25315258-a084-4a97-be13-529161cd4148",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / required resource: not present response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token,  <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(rnp.rnp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "eee932d5-a28d-48e6-99b0-4cc8680a7a5c",
                "parentUUID": "25315258-a084-4a97-be13-529161cd4148",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / contentType: invalid",
            "suites": [],
            "tests": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / contentType: invalid response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token,  <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(rnp.rnp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "d02715f5-35d4-4770-926e-bcec33b6e27d",
                "parentUUID": "98cf9675-f929-4154-a4c8-4b8922467881",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "98cf9675-f929-4154-a4c8-4b8922467881",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 400",
                "fullTitle": "POST / Publisher Tests POST / contentType: invalid response with status 400",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token,  <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(rnp.rnp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">400</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "d02715f5-35d4-4770-926e-bcec33b6e27d",
                "parentUUID": "98cf9675-f929-4154-a4c8-4b8922467881",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / contentType: Not Present",
            "suites": [],
            "tests": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / contentType: Not Present response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ctn.ctn())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c9ce2000-947c-433a-9bdf-55b912f02580",
                "parentUUID": "8fc47374-98d1-48cc-b803-61b74d675822",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "8fc47374-98d1-48cc-b803-61b74d675822",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 200",
                "fullTitle": "POST / Publisher Tests POST / contentType: Not Present response with status 200",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publish'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(ctn.ctn())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "c9ce2000-947c-433a-9bdf-55b912f02580",
                "parentUUID": "8fc47374-98d1-48cc-b803-61b74d675822",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "POST / invalid endpoint",
            "suites": [],
            "tests": [
              {
                "title": "response with status 404",
                "fullTitle": "POST / Publisher Tests POST / invalid endpoint response with status 404",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publisher'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(hp.hp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "7b49ee7b-8b25-4cd8-8517-9809fde033b3",
                "parentUUID": "af7fc032-2f80-4c13-a8f3-d49c3e77bd74",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publisher/test.js",
            "uuid": "af7fc032-2f80-4c13-a8f3-d49c3e77bd74",
            "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "response with status 404",
                "fullTitle": "POST / Publisher Tests POST / invalid endpoint response with status 404",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(url)<br>\t\t\t.post(<span class=\"hljs-string\">'/publisher'</span>)<br>\t\t\t.set({<br>\t\t\t\t<span class=\"hljs-string\">'Charset'</span>:<span class=\"hljs-string\">'utf-8'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Authorization'</span>: token, <br>\t\t\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'application/json'</span>, <br>\t\t\t\t<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/vnd.hedtech.applications.v2+json'</span><br>\t\t\t})<br>\t\t\t.send(hp.hp())<br>\t\t\t.timeout(<span class=\"hljs-number\">5000</span>)<br>\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\t\t\t\t<span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);<br>\t\t\t\tdone();<br>\t\t\t});",
                "isRoot": false,
                "uuid": "7b49ee7b-8b25-4cd8-8517-9809fde033b3",
                "parentUUID": "af7fc032-2f80-4c13-a8f3-d49c3e77bd74",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/publisher/test.js",
        "uuid": "b2accdab-d236-47ce-b6b2-d13c045df39c",
        "fullFile": "/home/adamsbd/git/hub-node-test/test/publisher/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Running UI Integration Tests",
        "suites": [],
        "tests": [
          {
            "title": "Example First Test",
            "fullTitle": "Running UI Integration Tests Example First Test",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "919e5dec-07e9-4a14-bedd-89e6aaf4732d",
            "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
            "skipped": false
          },
          {
            "title": "Example Second Test",
            "fullTitle": "Running UI Integration Tests Example Second Test",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>done();",
            "err": {
              "name": "AssertionError",
              "message": "true == false",
              "stack": "AssertionError: <span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">false</span><br>    at Context.&lt;anonymous&gt; (test/ui/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">16</span>)"
            },
            "isRoot": false,
            "uuid": "64bf1ded-d278-4573-810c-bc24acf1cefc",
            "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/ui/test.js",
        "uuid": "e235b16c-434b-4daa-b22b-56bcd693e197",
        "fullFile": "/home/adamsbd/git/hub-node-test/test/ui/test.js",
        "passes": [
          {
            "title": "Example First Test",
            "fullTitle": "Running UI Integration Tests Example First Test",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "919e5dec-07e9-4a14-bedd-89e6aaf4732d",
            "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "Example Second Test",
            "fullTitle": "Running UI Integration Tests Example Second Test",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>done();",
            "err": {
              "name": "AssertionError",
              "message": "true == false",
              "stack": "AssertionError: <span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">false</span><br>    at Context.&lt;anonymous&gt; (test/ui/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">16</span>)"
            },
            "isRoot": false,
            "uuid": "64bf1ded-d278-4573-810c-bc24acf1cefc",
            "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 1,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "b586d4da-4767-4cb3-bd61-bb3d5ed0f791",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Invoke errors api with valid errors payload",
      "fullTitle": "Running Error Integration Tests Invoke errors api with valid errors payload",
      "timedOut": false,
      "duration": 279,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "errorSchema.applicationId = applicationList.id;<br>errorSchema.description = validateDescription;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">201</span>);<br>done();",
      "isRoot": false,
      "uuid": "8593a0e7-e485-43e9-9b9a-03c6524bebe0",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Invoke errors api with invalid errors payload",
      "fullTitle": "Running Error Integration Tests Invoke errors api with invalid errors payload",
      "timedOut": false,
      "duration": 252,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">delete</span> errorSchema.responseCode;<br>errorSchema.description = <span class=\"hljs-string\">'Random String'</span>;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">400</span>);<br>done();",
      "isRoot": false,
      "uuid": "107b544a-d1d2-4c8a-acb4-59f4456a827c",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Verify UI has Error Message Sent",
      "fullTitle": "Running Error Integration Tests Verify UI has Error Message Sent",
      "timedOut": false,
      "duration": 4686,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">1500000</span>);<br>driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='errorsCount_link']\"</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[1]/div/section/button[2]'</span>)), <span class=\"hljs-number\">1300</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>        driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='input_description']\"</span>)), <span class=\"hljs-number\">2500</span>).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ele</span>)</span>{<br>            sleep.sleep(<span class=\"hljs-number\">3</span>)<br>            ele.sendKeys(validateDescription);<br>            driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'//*[@id=\"filter\"]/div/div[3]/button[1]'</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                sleep.sleep(<span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\">// Need to slp for a second to wait for filter</span><br>                driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[2]/table/tbody/tr[2]/td[5]/span[2]'</span>)), <span class=\"hljs-number\">100</span>).getInnerHtml().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">field</span>)</span>{<br>                    assert.equal(field, validateDescription);<br>                    done();<br>                });<br>            });<br>        });<br>    });<br> });",
      "isRoot": false,
      "uuid": "0d8209fb-e5dc-4378-91c9-c4b8f8cc7668",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Example First Test",
      "fullTitle": "Running UI Integration Tests Example First Test",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "947fdb57-fcec-436d-b64e-0804455bcf1f",
      "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
      "skipped": false
    },
    {
      "title": "Example Second Test",
      "fullTitle": "Running UI Integration Tests Example Second Test",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>done();",
      "err": {
        "name": "AssertionError",
        "message": "true == false",
        "stack": "AssertionError: <span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">false</span><br>    at Context.&lt;anonymous&gt; (test/ui/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">16</span>)"
      },
      "isRoot": false,
      "uuid": "787b8ecd-5cea-40dd-ba1b-1571d25b0d7e",
      "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Invoke errors api with valid errors payload",
      "fullTitle": "Running Error Integration Tests Invoke errors api with valid errors payload",
      "timedOut": false,
      "duration": 279,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "errorSchema.applicationId = applicationList.id;<br>errorSchema.description = validateDescription;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">201</span>);<br>done();",
      "isRoot": false,
      "uuid": "2756598a-01c0-41d9-b852-bc72722ecce5",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Invoke errors api with invalid errors payload",
      "fullTitle": "Running Error Integration Tests Invoke errors api with invalid errors payload",
      "timedOut": false,
      "duration": 252,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">delete</span> errorSchema.responseCode;<br>errorSchema.description = <span class=\"hljs-string\">'Random String'</span>;<br><span class=\"hljs-keyword\">let</span> url = envVars.test.url+envVars.global.error;<br><span class=\"hljs-keyword\">let</span> res = request(<span class=\"hljs-string\">'POST'</span>, url, {<br>    <span class=\"hljs-string\">'headers'</span>: {<br>        <span class=\"hljs-string\">\"content-type\"</span>: envVars.headers.error,<br>        <span class=\"hljs-string\">\"Authorization\"</span>: <span class=\"hljs-string\">\"Bearer \"</span>+ accessToken<br>    },<br>    <span class=\"hljs-string\">'body'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(errorSchema)<br>});<br>assert.equal(res.statusCode, <span class=\"hljs-number\">400</span>);<br>done();",
      "isRoot": false,
      "uuid": "07b1e0ae-a6c7-44b8-8144-d8b809ab6883",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Verify UI has Error Message Sent",
      "fullTitle": "Running Error Integration Tests Verify UI has Error Message Sent",
      "timedOut": false,
      "duration": 4686,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">1500000</span>);<br>driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='errorsCount_link']\"</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[1]/div/section/button[2]'</span>)), <span class=\"hljs-number\">1300</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>        driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">\"//*[@id='input_description']\"</span>)), <span class=\"hljs-number\">2500</span>).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ele</span>)</span>{<br>            sleep.sleep(<span class=\"hljs-number\">3</span>)<br>            ele.sendKeys(validateDescription);<br>            driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'//*[@id=\"filter\"]/div/div[3]/button[1]'</span>)), <span class=\"hljs-number\">100</span>).click().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                sleep.sleep(<span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\">// Need to slp for a second to wait for filter</span><br>                driver.wait(until.elementLocated(By.xpath(<span class=\"hljs-string\">'/html/body/div[2]/div[2]/section/section/div/div[2]/table/tbody/tr[2]/td[5]/span[2]'</span>)), <span class=\"hljs-number\">100</span>).getInnerHtml().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">field</span>)</span>{<br>                    assert.equal(field, validateDescription);<br>                    done();<br>                });<br>            });<br>        });<br>    });<br> });",
      "isRoot": false,
      "uuid": "9494632a-0380-4e6b-a83c-fce72969d71f",
      "parentUUID": "ed4d47f1-941e-415b-8479-fd814855e6a0",
      "skipped": false
    },
    {
      "title": "Example First Test",
      "fullTitle": "Running UI Integration Tests Example First Test",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "e7776ade-2666-4f44-9b64-66ed41ec30c5",
      "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "\"before all\" hook",
      "fullTitle": "POST / Publisher Tests \"before all\" hook",
      "timedOut": true,
      "duration": 2003,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "fs.readFile(<span class=\"hljs-string\">'../bannerAccessToken.txt'</span>, <span class=\"hljs-string\">'utf8'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, bannerAccessToken</span>) </span>{<br>\t  <span class=\"hljs-keyword\">if</span> (err) {<br>\t      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">console</span>.log(err);<br>\t  }<br>\t  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"\\nBanner Access Token from file: \"</span> + bannerAccessToken);<br>\t  token = <span class=\"hljs-string\">\"Bearer \"</span> + bannerAccessToken;<br>\t  done();<br> \t  });",
      "err": {
        "name": "Error",
        "message": "timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">2000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "31084615-357e-4f0a-a310-86a6937c337b",
      "parentUUID": "b2accdab-d236-47ce-b6b2-d13c045df39c",
      "skipped": false
    },
    {
      "title": "Example Second Test",
      "fullTitle": "Running UI Integration Tests Example Second Test",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>done();",
      "err": {
        "name": "AssertionError",
        "message": "true == false",
        "stack": "AssertionError: <span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">false</span><br>    at Context.&lt;anonymous&gt; (test/ui/test.js:<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">16</span>)"
      },
      "isRoot": false,
      "uuid": "d6a65755-56c2-4a30-9e9c-4958bf82587b",
      "parentUUID": "e235b16c-434b-4daa-b22b-56bcd693e197",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}