{
  "id": "1828",
  "name": "Adding Application using UI",
  "testCases": [{
      "testCaseId": 1,
      "name": "Verify Adding Applications",
      "steps": [{
        "id": 1,
        "method": "deleteApplications",
        "type": "hub-configuration-api",
        "params": {
          "action": "deleteApplications",
          "applications": ["applicationPub", "applicationSub"]
        }
      }, {
        "id": 2,
        "method": "addApplications",
        "type": "hub-configuration-api",
        "params": {
          "action": "createApplications",
          "applications": ["applicationPub", "applicationSub"]
        }
      }, {
        "id": 3,
        "method": "appPublisher",
        "type": "hub-configuration-api",
        "params": {
          "action": "addResource",
          "application": "applicationPub",
          "resources": "subjects"
        }
      }, {
        "id": 4,
        "method": "addSubscriber",
        "type": "hub-configuration-api",
        "params": {
          "action": "addSubscription",
          "application": "applicationSub",
          "subscriptions": "subjects"
        }
      }],
      "validation": []
    }, {
      "testCaseId": 5,
      "name": "Push Messages into Hub",
      "steps": [{
        "id": 1,
        "method": "sendChangeNotifications",
        "type": "hub-publish-api",
        "params": {
          "action": "sendChangeNotifications",
          "messageCount": 50,
          "application": "applicationPub",
          "resource": "subjects"
        }
      }],
      "validation": []
    }, {
      "testCaseId": 6,
      "name": "Consume Messages from Hub",
      "steps": [{
        "id": 1,
        "method": "consumeChangeNotifications",
        "type": "hub-message-queue-service",
        "params": {
          "action": "consumeChangeNotifications",
          "messageCounts": [10, 10, 0, 0, 0],
          "application": "applicationSub"
        }
      }],
      "validation": [{
        "name": "assert status code of 200",
        "action": "setPermissionsStatusCode",
        "type": "hub-admin-api",
        "setPermissions": "disabled",
        "test": {
          "action": "equal",
          "value": "200"
        }
      }, {
        "name": "assert status message",
        "action": "setPermissionsStatusText",
        "type": "hub-admin-api",
        "setPermissions": "disabled",
        "test": {
          "action": "include",
          "value": "permissions have been updated"
        }
      }]

    },

    {
      "testCaseId": 7,
      "name": "Consume Messages from Hub and validate",
      "steps": [{
        "id": 1,
        "method": "consumeChangeNotifications",
        "type": "hub-message-queue-service",
        "params": {
          "action": "consumeChangeNotifications",
          "messageCounts": [10, 10, 0, 0, 0],
          "application": "applicationSub"
        }
      }],
      "validation": [{
        "name": "assert status code of 200",
        "action": "consumeAllOneStatusCode",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "application": "applicationSub",
          "value": "200"
        }
      }, {
        "name": "assert empty array from consumeAll",
        "action": "consumeAllOneStatusText",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "isEmtpy": true,
          "application": " applicationSub",
          "value": ""
        }
      }]

    },

    {
      "testCaseId": 8,
      "name": "Set flag to True",
      "steps": [{
        "id": 1,
        "method": "consumeChangeNotifications",
        "type": "hub-message-queue-service",
        "params": {
          "action": "consumeChangeNotifications",
          "messageCounts": [10, 10, 0, 0, 0],
          "application": "applicationSub"
        }
      }],
      "validation": [{
        "name": "assert status code of 200",
        "action": "setPermissionsStatusCode",
        "type": "hub-admin-api",
        "setPermissions": "enable",
        "test": {
          "action": "equal",
          "value": "200"
        }
      }, {
        "name": "assert status message",
        "action": "setPermissionsStatusText",
        "type": "hub-admin-api",
        "setPermissions": "enable",
        "test": {
          "action": "include",
          "value": "permissions have been updated"
        }
      }]

    }, {
      "testCaseId": 9,
      "name": "Push Messages into Hub with flag set to True",
      "steps": [{
        "id": 1,
        "method": "sendChangeNotifications",
        "type": "hub-publish-api",
        "params": {
          "action": "sendChangeNotifications",
          "messageCount": 55,
          "application": "applicationPub",
          "resource": "subjects"
        }
      }],
      "validation": []
    }, {
      "testCaseId": 10,
      "name": "Consume Messages from Hub and validate",
      "steps": [{
        "id": 1,
        "method": "consumeChangeNotifications",
        "type": "hub-message-queue-service",
        "params": {
          "action": "consumeChangeNotifications",
          "messageCounts": [0, 0, 0, 0, 0],
          "application": "applicationSub"
        }
      }],
      "validation": [{
        "name": "assert status code of 200",
        "action": "consumeAllOneStatusCode",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "application": "applicationSub",
          "value": "200"
        }
      }, {
        "name": "assert array is not empty on consumeAll",
        "action": "consumeAllOneStatusText",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "isEmtpy": false,
          "application": " applicationSub",
          "value": ""
        }
      }]


    },

    {
      "testCaseId": 11,
      "id": 2,
      "name": "test",
      "steps": [{
        "method": "addApplications",
        "type": "hub-configuration-api",
        "params": {
          "action": "createApplications",
          "applications": ["applicationStanPub0", "applicationDarrickSub0"]
        }

      }]



    },

    {
      "testCaseId": 12,
      "name": "Consume Messages from Hub and validate",
      "steps": [{
        "id": 1,
        "method": "consumeChangeNotifications",
        "type": "hub-message-queue-service",
        "params": {
          "action": "consumeChangeNotifications",
          "messageCounts": [10, 10, 0, 0, 0],
          "application": "applicationSub"
        }
      }],
      "validation": [{
        "name": "assert status code of 200",
        "action": "consumeAllOneStatusCode",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "applicationStanPub0": "applicationDarrickSub0",
          "value": "200"
        }
      }, {
        "name": "assert empty array from consumeAll",
        "action": "consumeAllOneStatusText",
        "type": "hub-message-queue-service",
        "test": {
          "action": "equal",
          "isEmtpy": true,
          "application": " applicationDarrickSub0",
          "value": ""
        }
      }]

    },

    {
      "testCaseId": 13,
      "name": "Invalid endpoint Admins",
      "steps": [{
        "id": 1,
        "method": "invalidEndPoint",
        "type": "hub-admin-api",
        "params": {
          "action": "setInvalidEndPoint",
          "endPoint": "/admins/privileges/"

        },

        "validation": [{
          "name": "assert status code of 400",
          "action": "setInvalidEndPoint",
          "type": "hub-admin-api",
          "test": {
            "action": "equal",
            "endPoint" : "/admins/privileges/",
            "value": "400"
          }

        }]

      }]


    }

  ]
}